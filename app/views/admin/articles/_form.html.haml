= semantic_form_for [:admin, @article] do |f| 
  = f.inputs "Article Details" do
    -#= f.semantic_errors :introduction
    = f.input :title
    = f.input :image, :label => "Article Image", :as => :file, :hint => f.template.image_tag(f.object.image.user_thumb.to_s)
    = f.input :introduction, :label => "Article Preview", :hint => "Introductory content for article (200 characters max)", :as => :ckeditor, :input_html => { :ckeditor => { :height => 100, :toolbar => 'ToolsNoImage' } }
    - if f.object.persisted?
      = f.input :user_article_category, :label => "Select Article Category", :include_blank => false, 
        :as => :select, :collection => current_admin_user.current_active_categories, :input_html => { :onchange => remote_request(:post, :change_sub_categories, { :user_article_category_id => "$('#article_user_article_category_id').val()"}, :article_user_article_sub_category_id) }
      = f.input :user_article_sub_category, :collection => UserArticleCategory.current_sub_categories(f.object.user_article_category_id)
    - else
      = f.input :user_article_category, :label => "Select Article Category", 
          :include_blank => "choose article category", :as => :select, :collection => current_admin_user.current_active_categories
      = f.input :user_article_sub_category, :collection => []
    = f.input :body, :label => "Article Content", :hint => "Article content (500 words max)", :as => :ckeditor, :input_html => { :ckeditor => { :height => 400, :toolbar => 'Full' } }

  = f.actions :submit

  -# :prompt => "Select an Author"